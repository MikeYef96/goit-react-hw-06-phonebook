{"version":3,"sources":["lib/InputFn.module.css","components/contactForm/ContactForm.module.css","components/contactList/ContactList.module.css","lib/ButtonFn.module.css","components/phonebook/Phonebook.module.css","redux/actions.js","redux/reducer.js","redux/store.js","lib/ButtonFn.jsx","lib/InputFn.jsx","components/contactForm/ContactForm.jsx","components/filter/Filter.jsx","components/contactList/ContactList.jsx","components/phonebook/Phonebook.jsx","App.jsx","index.js"],"names":["module","exports","deleteContact","createAction","changeFilter","addContact","name","number","payload","id","uuid","contactsReducer","createReducer","JSON","parse","window","localStorage","getItem","state","filter","contact","filterReducer","_","combineReducers","contacts","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","rootReducer","devTools","process","ButtonFn","type","onClick","className","css","btn","InputFn","titleNameInput","placeholder","value","onChange","required","label","htmlFor","autoComplete","input","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleSubmit","evt","preventDefault","map","includes","isAdded","alert","onAddContact","form","onSubmit","inputName","target","Filter","ContactList","onDeleteContact","length","onChangeFilter","filterContacts","toLowerCase","filteredContacts","contactListItem","listItemContainer","connect","useEffect","setItem","stringify","Fragment","container","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f88bfcb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"InputFn_label__3zt11\",\"input\":\"InputFn_input__1KXSS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__iiPp1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactList_contactListItem__28mf1\",\"listItemContainer\":\"ContactList_listItemContainer__3gXD_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ButtonFn_btn__lfdIC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Phonebook_container__20KRs\"};","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuid } from 'uuid';\n\nexport const deleteContact = createAction('contacts/delete');\nexport const changeFilter = createAction('contacts/changeFilter');\nexport const addContact = createAction('contacts/add', (name, number) => ({\n  payload: {\n    id: uuid(),\n    name,\n    number,\n  },\n}));\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\n// import defaultContacts from '../base/defaultContacts';\nimport { changeFilter, addContact, deleteContact } from './actions';\n\nconst contactsReducer = createReducer(\n  JSON.parse(window.localStorage.getItem('contacts')),\n  {\n    [addContact]: (state, { payload }) => [...state, payload],\n    [deleteContact]: (state, { payload }) =>\n      state.filter(contact => {\n        return contact.id !== payload;\n      }),\n  },\n);\n\nconst filterReducer = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport rootReducer from './reducer';\nimport logger from 'redux-logger';\n\nconst middleware = [...getDefaultMiddleware(), logger];\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from 'react';\nimport css from './ButtonFn.module.css';\n\nexport function ButtonFn({ name, type, onClick }) {\n  return (\n    <>\n      <button className={css.btn} type={type} onClick={onClick}>\n        {name}\n      </button>\n    </>\n  );\n}\n","import React from 'react';\nimport css from './InputFn.module.css';\n\nexport function InputFn({\n  titleNameInput,\n  type,\n  placeholder,\n  value,\n  onChange,\n  name,\n  id,\n  required,\n}) {\n  return (\n    <>\n      <label className={css.label} htmlFor={id}>\n        {titleNameInput}\n        <input\n          autoComplete=\"off\"\n          className={css.input}\n          type={type}\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n          name={name}\n          required={required}\n        />\n      </label>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { addContact } from '../../redux/actions';\nimport { ButtonFn } from '../../lib/ButtonFn';\nimport { InputFn } from '../../lib/InputFn';\nimport css from './ContactForm.module.css';\n\nexport function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const { contacts } = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const onAddContact = (name, number) => dispatch(addContact(name, number));\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const isAdded = name =>\n      contacts.map(contact => contact.name).includes(name);\n\n    if (isAdded(name)) {\n      return alert(`${name} is already exists`);\n    } else {\n      onAddContact(name, number);\n    }\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <form className={css.form} onSubmit={evt => handleSubmit(evt)}>\n        <InputFn\n          className={css.inputName}\n          name=\"name\"\n          onChange={evt => setName(evt.target.value)}\n          titleNameInput=\"Name\"\n          type=\"text\"\n          placeholder=\"Enter name\"\n          value={name}\n          required\n        />\n        <InputFn\n          name=\"number\"\n          onChange={evt => setNumber(evt.target.value)}\n          titleNameInput=\"Number\"\n          type=\"tel\"\n          placeholder=\"Enter number\"\n          value={number}\n          required\n        />\n        <br />\n        <ButtonFn name=\"Add contact\" type=\"submit\" />\n      </form>\n    </>\n  );\n}\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func,\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/actions';\nimport { InputFn } from '../../lib/InputFn';\n\nexport function Filter() {\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch;\n\n  const handleChangeFilter = evt => dispatch(changeFilter(evt.target.value));\n\n  return (\n    <>\n      <InputFn\n        value={filter}\n        type=\"text\"\n        placeholder=\"Enter contact name\"\n        onChange={handleChangeFilter}\n        titleNameInput=\"Find contact by name:\"\n      />\n    </>\n  );\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/actions';\n// import PropTypes from 'prop-types';\nimport { Filter } from '../filter/Filter';\nimport { ButtonFn } from '../../lib/ButtonFn';\n// import { ListItem } from './ListItem';\nimport css from './ContactList.module.css';\n\nexport function ContactList({\n  onDeleteContact,\n  length,\n  value,\n  onChangeFilter,\n}) {\n  const { contacts, filter } = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  onDeleteContact = id => dispatch(deleteContact(id));\n\n  const filteredContacts = (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  const filterContacts = filteredContacts(contacts, filter);\n\n  return (\n    <>\n      <h2>Contacts</h2>\n      {length > 0 && <Filter value={value} onChangeFilter={onChangeFilter} />}\n      <ul>\n        {filterContacts.map(({ id, name, number }) => (\n          <li className={css.contactListItem} key={id}>\n            <div className={css.listItemContainer}>\n              <p>\n                {name}: <span>{number}</span>\n              </p>\n\n              <ButtonFn\n                name=\"delete\"\n                type=\"button\"\n                onClick={evt => onDeleteContact(id)}\n              />\n            </div>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\n// ContactList.propTypes = {\n//   onDeleteContact: PropTypes.func,\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.exact({\n//       id: PropTypes.string,\n//       name: PropTypes.string,\n//       number: PropTypes.string,\n//     }),\n//   ),\n// };\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { addContact } from '../../redux/actions';\nimport { ContactForm } from '../contactForm/ContactForm';\nimport { ContactList } from '../contactList/ContactList';\nimport css from './Phonebook.module.css';\n\nfunction Phonebook({ contacts }) {\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <React.Fragment>\n      <div className={css.container}>\n        <ContactForm onAddContact={addContact} />\n        <ContactList />\n      </div>\n    </React.Fragment>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    contacts: state.contacts,\n  };\n};\n\nexport default connect(mapStateToProps)(Phonebook);\n","import React from 'react';\nimport Phonebook from './components/phonebook/Phonebook';\n\nexport function App() {\n  return <Phonebook />;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}