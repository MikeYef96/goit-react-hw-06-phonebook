{"version":3,"sources":["lib/InputFn.module.css","components/contactForm/ContactForm.module.css","components/contactList/ContactList.module.css","lib/ButtonFn.module.css","components/phonebook/Phonebook.module.css","redux/actions.js","redux/reducer.js","redux/store.js","redux/selectors.js","lib/ButtonFn.jsx","lib/InputFn.jsx","components/contactForm/ContactForm.jsx","components/filter/Filter.jsx","components/contactList/ContactList.jsx","components/phonebook/Phonebook.jsx","App.jsx","index.js"],"names":["module","exports","deleteContact","createAction","changeFilter","addContact","name","number","payload","id","uuid","items","createReducer","state","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","rootReducer","devTools","process","persistor","persistStore","getContacts","getFilter","getVisibleContacts","normalizedFilter","toLowerCase","text","includes","getFilteredContacts","ButtonFn","type","onClick","className","css","btn","InputFn","titleNameInput","placeholder","value","onChange","required","label","htmlFor","autoComplete","input","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleSubmit","evt","preventDefault","find","contact","isAdded","alert","onAddContact","form","onSubmit","inputName","target","Filter","ContactList","map","contactListItem","listItemContainer","event","onDeleteContact","connect","Fragment","container","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.69ad743e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"InputFn_label__3zt11\",\"input\":\"InputFn_input__1KXSS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__iiPp1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactList_contactListItem__28mf1\",\"listItemContainer\":\"ContactList_listItemContainer__3gXD_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ButtonFn_btn__lfdIC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Phonebook_container__20KRs\"};","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuid } from 'uuid';\n\nexport const deleteContact = createAction('contacts/delete');\nexport const changeFilter = createAction('contacts/changeFilter');\nexport const addContact = createAction('contacts/add', (name, number) => ({\n  payload: {\n    id: uuid(),\n    name,\n    number,\n  },\n}));\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { changeFilter, addContact, deleteContact } from './actions';\n\nconst items = createReducer([], {\n  [addContact]: (state, { payload }) => [...state, payload],\n  [deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport rootReducer from './reducer';\nimport logger from 'redux-logger';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst phonebookPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(phonebookPersistConfig, rootReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n\n  const getFilteredContacts = contacts => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(text =>\n      text.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  return getFilteredContacts(contacts);\n};\n","import React from 'react';\nimport css from './ButtonFn.module.css';\n\nexport function ButtonFn({ name, type, onClick }) {\n  return (\n    <>\n      <button className={css.btn} type={type} onClick={onClick}>\n        {name}\n      </button>\n    </>\n  );\n}\n","import React from 'react';\nimport css from './InputFn.module.css';\n\nexport function InputFn({\n  titleNameInput,\n  type,\n  placeholder,\n  value,\n  onChange,\n  name,\n  id,\n  required,\n}) {\n  return (\n    <>\n      <label className={css.label} htmlFor={id}>\n        {titleNameInput}\n        <input\n          autoComplete=\"off\"\n          className={css.input}\n          type={type}\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n          name={name}\n          required={required}\n        />\n      </label>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { getContacts } from '../../redux/selectors';\nimport { addContact } from '../../redux/actions';\nimport { ButtonFn } from '../../lib/ButtonFn';\nimport { InputFn } from '../../lib/InputFn';\nimport css from './ContactForm.module.css';\n\nexport function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const onAddContact = (name, number) => dispatch(addContact(name, number));\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const isAdded = name => contacts.find(contact => contact.name === name);\n\n    if (isAdded(name)) {\n      return alert(`${name} is already exists`);\n    } else {\n      onAddContact(name, number);\n    }\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <form className={css.form} onSubmit={evt => handleSubmit(evt)}>\n        <InputFn\n          className={css.inputName}\n          name=\"name\"\n          onChange={evt => setName(evt.target.value)}\n          titleNameInput=\"Name\"\n          type=\"text\"\n          placeholder=\"Enter name\"\n          value={name}\n          required\n        />\n        <InputFn\n          name=\"number\"\n          onChange={evt => setNumber(evt.target.value)}\n          titleNameInput=\"Number\"\n          type=\"tel\"\n          placeholder=\"Enter number\"\n          value={number}\n          required\n        />\n        <br />\n        <ButtonFn name=\"Add contact\" type=\"submit\" />\n      </form>\n    </>\n  );\n}\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func,\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/selectors';\nimport { changeFilter } from '../../redux/actions';\nimport { InputFn } from '../../lib/InputFn';\n\nexport function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = evt => dispatch(changeFilter(evt.target.value));\n\n  return (\n    <>\n      <InputFn\n        value={filter}\n        type=\"text\"\n        placeholder=\"Enter contact name\"\n        onChange={handleChangeFilter}\n        titleNameInput=\"Find contact by name:\"\n      />\n    </>\n  );\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteContact } from '../../redux/actions';\nimport { getVisibleContacts } from '../../redux/selectors';\nimport { Filter } from '../filter/Filter';\nimport { ButtonFn } from '../../lib/ButtonFn';\nimport css from './ContactList.module.css';\n\nexport function ContactList() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => dispatch(deleteContact(id));\n\n  return (\n    <>\n      <h2>Contacts</h2>\n      <Filter />\n      <ul>\n        {contacts.map(({ id, name, number }) => (\n          <li className={css.contactListItem} key={id}>\n            <div className={css.listItemContainer}>\n              <p>\n                {name}: <span>{number}</span>\n              </p>\n\n              <ButtonFn\n                name=\"delete\"\n                type=\"button\"\n                onClick={event => onDeleteContact(id)}\n              />\n            </div>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nContactList.propTypes = {\n  onDeleteContact: PropTypes.func,\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { addContact, deleteContact } from '../../redux/actions';\nimport { ContactForm } from '../contactForm/ContactForm';\nimport { ContactList } from '../contactList/ContactList';\nimport css from './Phonebook.module.css';\n\nfunction Phonebook() {\n  return (\n    <React.Fragment>\n      <div className={css.container}>\n        <ContactForm onAddContact={addContact} />\n        <ContactList onDeleteContact={deleteContact} />\n      </div>\n    </React.Fragment>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    contacts: state.contacts,\n  };\n};\n\nexport default connect(mapStateToProps)(Phonebook);\n","import React from 'react';\nimport Phonebook from './components/phonebook/Phonebook';\n\nexport function App() {\n  return <Phonebook />;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}